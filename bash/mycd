#!/bin/bash

#overwrite cd so that it recusively search the directories below until a
#match occurs.

function prplmnky_cd {
  #echo "$(declare -f prplmnky_old_cd)"

  if [ -z "$(declare -f prplmnky_old_cd)" ]; then
    #echo "prplmnky_old_cd empty"
    #declare -f prplmnky_old_cd
    if [ -n "$(declare -f cd)" ]; then
      eval "$(echo "prplmnky_old_cd()"; declare -f cd | tail -n +2)"

      #echo "prplmnky_old_cd did not exist, but old cd did"
      #declare -f prplmnky_old_cd
    else
      prplmnky_old_cd() { builtin cd $@; }

      #echo "prplmnky_old_cd did not exist"
      #declare -f prplmnky_old_cd
    fi
  fi

  export -f prplmnky_old_cd

  function cd() {
    prplmnky_old_cd "$*" > /dev/null 2>&1
    v="$?"
    #echo "orig $*"

    if [ $v -gt 0 ]; then
      for i in $@; do
        if [[ $i =~ ^-.*P.* ]]; then
          local noFollowSym=1
        fi
      done

      #echo 'non-zero status'
      matches=($(find ${noFollowSym:-"-L"} . -maxdepth 5 -name "${@:$#:1}" -type d 2>/dev/null));

      #echo "found matches $matches"
      #echo executing "cd ${@:0:$#-1} ${matches[0]}"
      if [ -n "${matches[0]}" ]; then
        prplmnky_old_cd "${@:1:$#-1}" "${matches[0]}" &>/dev/null
        v="$?"
      fi
    
      if [ $v -gt 0 ]; then
        #echo "use regular cd"
        #echo "orig $*"
        prplmnky_old_cd "$*"
      #else
        #ls
      fi
    #else
      #ls
    fi
  }

  export -f cd
}

prplmnky_cd

#declare -f prplmnky_cd
#declare -f prplmnky_old_cd
#declare -f cd
